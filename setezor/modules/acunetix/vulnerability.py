from .utils import send_request
from .schemes.vulnerability import Vulnerability as VulnerabilityScheme
import json

class Vulnerability:

    url = "/api/v1/vulnerabilities"

    @classmethod
    async def get_by_id(cls, id: str, credentials: dict):
        return await send_request(base_url=credentials["url"],
                                  token=credentials["token"],
                                  url=f"{cls.url}/{id}",
                                  method="GET")
    
    @classmethod
    async def get_http_response(cls, 
                                vulnerability_id: str, 
                                scan_id: str, 
                                result_id: str, 
                                credentials: dict):
        _, data, status =  await send_request(base_url=credentials["url"],
                                  token=credentials["token"],
                                  url=f"/api/v1/scans/{scan_id}/results/{result_id}/vulnerabilities/{vulnerability_id}/http_response",
                                  method="GET")
        if status != 200:
            return ""
        if isinstance(data, bytes):
            return data.decode(errors="ignore")
        return data

    @classmethod
    def from_acunetix_response(cls, data: list[dict]):
        result = []
        for obj in data:
            cve = ""
            cwe = ""
            for tag in obj["tags"]:
                if "cve" in tag.lower():
                    cve = tag
                if "cwe" in tag.lower():
                    cwe = tag
            result.append(json.loads(VulnerabilityScheme(
                name=obj["vt_name"], cve=cve, cwe=cwe, **obj).model_dump_json()))
        return result
